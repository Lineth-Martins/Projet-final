name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  testing-job:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - run: pip install poetry
      - run: poetry install --no-interaction --no-root
      - run: poetry run pytest --cov=app --cov-report=xml --junitxml=test-results.xml

  linting-job:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - run: pip install poetry
      - run: poetry install --no-interaction --no-root
      - run: poetry run flake8 app/
      - run: poetry run black --check app/
      - run: poetry run isort --check-only app/

  build-job:
    runs-on: ubuntu-latest
    needs: [testing-job, linting-job]
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - run: docker build --tag my-app:${{ github.sha }} --tag my-app:latest .
      - run: docker save my-app:latest -o app.tar
      - uses: actions/upload-artifact@v3
        with:
          name: app-image
          path: app.tar

  run-job:
    runs-on: ubuntu-latest
    needs: build-job
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: app-image
      - run: docker load -i app.tar
      - run: docker run -d -p 8080:8000 --name my-running-app my-app:latest
